[tox]
envlist = linters,types,security,units,mutation
skipsdist = True

[testenv]
basepython = python3.8
deps =
    msgpack
    pika
    flask
    boto3

[testenv:formatter]
basepython = python3.8
skip_install = true
deps =
    black
commands =
    black -v --config service/pyproject.toml --check service/ tests/ generator.py

[testenv:flake8]
basepython = python3.8
skip_install = true
deps =
    flake8
    flake8-bugbear
    flake8-colors
    flake8-docstrings
    flake8-isort
    flake8-typing-imports
    pep8-naming
commands =
    flake8 service tests

[testenv:pylint]
basepython = python3.8
skip_install = true
deps =
    pyflakes
    pylint
commands =
    pylint service tests

[testenv:linters]
basepython = python3.8
skip_install = true
deps =
    {[testenv]deps}
    {[testenv:flake8]deps}
    {[testenv:pylint]deps}
commands =
    {[testenv:flake8]commands}
    {[testenv:pylint]commands}

[testenv:units]
deps =
    {[testenv]deps}
    coverage
    nose
    nose-timer
    rednose
commands = nosetests --verbosity=2 {posargs:tests} \
                     --with-timer \
                     --with-coverage \
                     --cover-erase \
                     --cover-package=service \
                     --cover-min-percentage=100 \
                     --rednose \
                     --timer-fail=error \
                     --cover-html

[testenv:mutation]
setenv = 
    HOME = {env:HOME:/tmp}
deps =
    {[testenv]deps}
    mutmut
commands = mutmut run --no-progress --simple-output --CI --paths-to-mutate service --tests-dir tests

[testenv:mypy]
deps =
    {[testenv]deps}
    mypy
    types-flask
    msgpack-types
    pika-stubs
    boto3-stubs
commands = mypy --config-file mypy.ini -p service -p tests

[testenv:vulture]
deps = vulture
commands = vulture service tests --ignore-names return_value,side_effect,healthz

[testenv:types]
basepython = python3.8
skip_install = true
deps =
    {[testenv:vulture]deps}
    {[testenv:mypy]deps}
commands =
    {[testenv:vulture]commands}
    {[testenv:mypy]commands}

[testenv:bandit]
deps = bandit
commands = bandit -r service tests

[testenv:security]
basepython = python3.8
skip_install = true
deps =
    {[testenv:bandit]deps}
commands =
    {[testenv:bandit]commands}
